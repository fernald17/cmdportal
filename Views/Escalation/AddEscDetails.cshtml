@model IToversite.Models.EscDetails

@{
    ViewBag.Title = "AddEscDetails";
    Layout = "~/Views/Shared/IT_Layout.cshtml";


}

<div class="page-wrapper">

    <div class="page-content--bge5">
        <div class="container">
            <div class="login-wrap">
                <div class="login-content">

                    <div class="login-form">


                        @using (Html.BeginForm("AddEscDetails", "Escalation", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()


                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group" style="display:none">
                                @Html.LabelFor(model => model.EscId)
                                @Html.TextBoxFor(model => model.EscId)
                                @Html.ValidationMessageFor(model => model.EscId, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group" style="display:none">
                                @Html.LabelFor(model => model.EmpId)
                                @Html.TextBoxFor(model => model.EmpId)
                                @Html.ValidationMessageFor(model => model.EmpId, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmpName)

                                @Html.LabelForModel(Model.EmpName, new { @style = "margin-left:25%;" })


                                @*@Html.LabelFor( Model.EmpName, new { @class = " ", @style="margin-left:15%" })*@
                                @*@Html.ValidationMessageFor(model => model.EmpName, "", new { @class = "text-danger" })*@

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.IssueDtls)
                                @Html.TextAreaFor(model => model.IssueDtls, new { @class = "au-input au-input--full alert alert-danger" })
                                @*@Html.ValidationMessageFor(model => model.IssueDtls, "", new { @class = "text-danger" })*@

                            </div>



                            if (Model != null)
                            {

                                foreach (var item in Model.DetailsList)
                                {

                                    <div class="form-group"> 
                                        @Html.DisplayFor(model => item.comment, new { @class = "au-input au-input--full" })
                                    </div>
                                }
                            }


                      

                            <div class="form-group">
                                @Html.LabelFor(model => model.comment)
                                @Html.TextAreaFor(model => model.comment, new { @class = "au-input au-input--full" })
                                @Html.ValidationMessageFor(model => model.comment, "", new { @class = "text-danger" })

                            </div>


                            <div class="form-group">
                               
                                    <input type="submit" value="Submit" class="btn btn-success btn-lg btn-block" />
                               
                            </div>


                        }


                    </div>



            </div>


        </div>


    </div>


</div>

    </div>






@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
